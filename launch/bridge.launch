<launch>
    <!-- odom args-->
    <arg name="pose_update_thresh" default="0.3"/>
    <arg name="ns" default=""/>
    <arg name="queue_size" default="7"/>
    <arg name="lidar_slices" default="8"/>
    <arg name="comm" default="server"/>
    <!-- ROS parameterized redis server info-->
    <group if="$(eval arg('comm') == 'server')">
        <rosparam command="load" file="$(dirname)/redis_login.yaml"/>  <!--This file is availavle on the campusroveriv slack channel-->
    </group>
    <param name="redis_ns" value="$(arg ns)"/>
    <param name="redis_qs" value="$(arg queue_size)"/>
    <!-- Additional params for bridge nodes-->
    <param name="pose_update_thresh" value="$(arg pose_update_thresh)"/>
    <param name="lidar_slices" value="$(arg lidar_slices)"/>
    <!-- launch map and odom nodes -->
    <node pkg="robot_services" name="map_bridge" type="map_bridge.py" output="screen"/>
    <node pkg="robot_services" name="odom_bridge" type="odom_bridge.py" output="screen"/>
    <node pkg="robot_services" name="reset_bridge" type="reset_bridge.py" output="screen"/>
    <node pkg="robot_services" name="log_bridge" type="log_bridge.py" output="screen"/>
    <node pkg="robot_services" name="lidar_bridge" type="lidar_bridge.py" output="screen"/>
    <!-- launch movement command nodes-->
    <include file="$(dirname)/command.launch"/>
    <!-- fiducials -->
    <include file="$(dirname)/fiducials.launch">
        <arg name="ns" value="$(arg ns)"/>
    </include>
    <!-- SLAM -->
    <!-- Gmapping -->
    <node pkg="gmapping" type="slam_gmapping" name="rs_slam_gmapping" output="screen">
        <rosparam command="load" file="$(dirname)/slam.yaml" />
    </node>
    <!-- rviz, with custom settings -->
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(dirname)/rsrviz.rviz"/>
    <!-- publish robot tfs to frames on body-->
    <arg name="urdf_file" default="" />  <!-- the path to the robot's urdf file. leave blank using gazebo-->
    <group if="$(eval arg('urdf_file') != '')">
        <!-- If you use gazebo, this param is already set. for an IRL robot like gopigo3, pass the urdf_file arg-->
        <param name="robot_description" command="$(arg urdf_file)" />
    </group>
    <node pkg="robot_state_publisher" name="robot_state_publisher2" type="robot_state_publisher" output="screen"/>
</launch>
